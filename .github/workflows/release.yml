name: Release C++ CI

on: [push, pull_request]

jobs:
  windows:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Set up CMake
      uses: lukka/get-cmake@latest

    - name: Install Vulkan SDK
      uses: jakoch/install-vulkan-sdk-action@v1.0.0
      with:
        vulkan_version: '1.3.231.1'  # Specify the version you need
        install_runtime: true
        cache: true
        stripdown: true

    - name: Verify Vulkan installation
      run: |
        echo "Vulkan SDK installed at ${{ env.VULKAN_SDK }}"
        dir ${{ env.VULKAN_SDK }}

    - name: Download prebuilt GLFW binaries
      run: |
        curl -L https://github.com/glfw/glfw/releases/download/3.3.8/glfw-3.3.8.bin.WIN64.zip -o glfw.zip
        tar -xf glfw.zip -C vendor

    - name: Install GLM
      run: |
        curl -L -o glm.zip https://github.com/g-truc/glm/releases/download/0.9.9.8/glm-0.9.9.8.zip
        unzip glm.zip -d C:/glm
        echo "GLM installed at C:/glm"
    
    - name: Download libsndfile
      run: |
        curl -L -o libsndfile.zip https://github.com/libsndfile/libsndfile/releases/download/1.2.2/libsndfile-1.2.2-win64.zip
        unzip libsndfile.zip -d vendor

    - name: Set up environment variables
      run: |
        echo "LIBSNDFILE_DIR=$(pwd)/vendor/libsndfile-1.2.2-win64" >> $GITHUB_ENV
        echo "PATH=$(pwd)\vendor\libsndfile-1.2.2-win64\bin:$PATH" >> $GITHUB_ENV
        echo "GLM_PATH=C:\glm\glm" >> $GITHUB_ENV
        echo "GLFW_PATH=vendor\glfw-3.3.8.bin.WIN64" >> $GITHUB_ENV
        echo "GLFW_LIBRARY=C:\ProgramData\chocolatey\lib\glfw\lib" >> $GITHUB_ENV

    - name: Build GLSL Shaders
      run: |
        mkdir -p build/shaders
        $shaderFiles = Get-ChildItem -Path shaders -Include *.vert,*.frag -Recurse
        foreach ($file in $shaderFiles) {
          ${{ env.VULKAN_SDK }}/Bin/glslc.exe $file.FullName -o build/shaders/$($file.Name).spv
        }
        echo "GLSL shaders compiled to SPIR-V"

    - name: List vendor directory
      run: ls -l vendor

    - name: Configure CMake
      run: |
        cmake -S . -B build -DVULKAN_SDK_PATH="${{ env.VULKAN_SDK }}" -DGLM_PATH="${{ env.GLM_PATH }}" -DGLFW_PATH="${{ env.GLFW_PATH }}" -DGLFW_LIBRARY="${{ env.GLFW_LIBRARY }}" ${{ vars.CMAKE_BUILD_OPTS_WINDOWS }}

    - name: Build
      run: cmake --build build --config Release
  linux:
    runs-on: ubuntu-latest

    steps:
    - name: Clone repository
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Set up CMake
      uses: lukka/get-cmake@latest

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libvulkan-dev libglm-dev libsndfile1-dev libglfw3-dev portaudio19-dev glslang-tools

    - name: Compile shaders
      run: |
        cmake -S . -B build
        cmake --build build --target Shaders

    - name: Configure and Build
      run: |
        cmake -S . -B build ${{ vars.CMAKE_BUILD_OPTS_LINUX }}
        cmake --build build
    - name: Run Unit Tests
      run: ctest --test-dir build --output-on-failure -j12
  macos:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install Dependencies
      run: |
        # Install other dependencies using Homebrew
        brew install glfw
        brew install glm
        brew install portaudio
        brew install libsndfile
        brew install make
        # Install Vulkan SDK (MoltenVK)
        brew install molten-vk
        brew install vulkan-tools
    
    - name: Set up Environment Variables
      run: |
        echo "VULKAN_SDK=/opt/homebrew/Cellar/molten-vk/1.2.11" >> $GITHUB_ENV
        echo "PORTAUDIO_PATH=/opt/homebrew/Cellar/portaudio/19.7.0" >> $GITHUB_ENV
        echo "GLFW_PATH=/opt/homebrew/Cellar/glfw/3.4" >> $GITHUB_ENV
        echo "LIBSNDFILE_PATH=/opt/homebrew/Cellar/libsndfile/1.2.2" >> $GITHUB_ENV

    - name: Compile Shaders
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DVULKAN_SDK_PATH=${{ env.VULKAN_SDK }}
        cmake --build . --target Shaders


    - name: Build Engine
      run: |
        cmake -DCMAKE_BUILD_TYPE=Release -DVULKAN_SDK_PATH=${{ env.VULKAN_SDK }} -DPORTAUDIO_PATH=${{ env.PORTAUDIO_PATH }} -DCMAKE_MAKE_PROGRAM=/usr/bin/make -DCMAKE_C_COMPILER=/usr/bin/gcc -DGLFW_PATH=${{ env.GLFW_PATH }} -DLIBSNDFILE_PATH=${{ env.LIBSNDFILE_PATH }} ${{ vars.CMAKE_BUILD_OPTS_MACOS }}
        cmake --build .